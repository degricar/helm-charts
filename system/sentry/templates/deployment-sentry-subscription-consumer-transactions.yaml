apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-subscription-consumer-transactions
  labels:
    app: sentry
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    app.kubernetes.io/managed-by: "Helm"
  {{- if .Values.asHook }}
  {{- /* Add the Helm annotations so that deployment after asHook from true to false works */}}
  annotations:
    meta.helm.sh/release-name: "{{ .Release.Name }}"
    meta.helm.sh/release-namespace: "{{ .Release.Namespace }}"
    "helm.sh/hook": "post-install,post-upgrade"
    "helm.sh/hook-weight": "10"
  {{- end }}
spec:
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
        app: sentry
        release: "{{ .Release.Name }}"
        role: sentry-subscription-consumer-transactions
  replicas: 1
  template:
    metadata:
      annotations:
        checksum/configYml: {{ .Values.config.configYml | toYaml | toString | sha256sum }}
        checksum/sentryConfPy: {{ .Values.config.sentryConfPy | sha256sum }}
        # checksum/config.yaml: {{ include (print $.Template.BasePath "/configmap-sentry.yaml") . | sha256sum }}
      labels:
        app: sentry
        release: "{{ .Release.Name }}"
        role: sentry-subscription-consumer-transactions
      containers:
      - name: {{ .Chart.Name }}-subscription-consumer-transactions
        image: "{{required ".Values.global.dockerHubMirror is missing" .Values.global.dockerHubMirror }}/{{ required ".Values.image.sentry.repository is missing" .Values.image.sentry.repository }}:{{ required ".Values.image.sentry.tag is missing" .Values.image.sentry.tag }}
        imagePullPolicy: {{ default "IfNotPresent" .Values.image.sentry.pullPolicy }}
        command: ["sentry"]
        args:
          - "run"
          - "consumer"
          - "transactions-subscription-results"
          - "--consumer-group"
          - "query-subscription-consumer"
        volumeMounts:
        - mountPath: /etc/sentry
          name: config
          readOnly: true
      {{- if .Values.serviceAccount.enabled }}
      serviceAccountName: {{ .Values.serviceAccount.name }}-subscription-consumer-transactions
      {{- end }}
      volumes:
      - name: config
        configMap:
          name: {{ template "fullname" . }}-sentry
      - name: sentry-data
      {{- if and (eq .Values.filestore.backend "filesystem") .Values.filestore.filesystem.persistence.enabled (.Values.filestore.filesystem.persistence.persistentWorkers) }}
      {{- if .Values.filestore.filesystem.persistence.existingClaim }}
        persistentVolumeClaim:
          claimName: {{ .Values.filestore.filesystem.persistence.existingClaim }}
      {{- else }}
        persistentVolumeClaim:
          claimName: {{ template "fullname" . }}-data
      {{- end }}
      {{- else }}
        emptyDir: {}
      {{ end }}
