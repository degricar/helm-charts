{{- if .Values.nanny_enabled }}
{{- $ignore := required "missing list of bind servers in .Values.designate_nanny.cleaner.instances" .Values.designate_nanny.cleaner -}}
{{- $instances := required "missing list of bind servers in .Values.designate_nanny.cleaner.instances" .Values.designate_nanny.cleaner.instances -}}
{{ $endpoint := include "keystone_api_endpoint_host_public" . -}}
{{ $top := . -}}
{{- range $instance := $instances}}
---
#  Deployment for cleaner instance on  {{ $instance }} with {{$endpoint}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $top.Release.Name }}-{{ $instance }}
  labels:
    app.kubernetes.io/name: {{ $top.Release.Name }}-{{ $instance }}
    app.kubernetes.io/instance: {{ $top.Release.Name }}-{{ $instance }}
    app: {{ $top.Release.Name }}-{{ $instance }}
    ccloud/support-group: network-api
    system: openstack
    application: designate
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ $top.Release.Name }}-{{ $instance }}
      app.kubernetes.io/name: {{ $top.Release.Name }}-{{ $instance }}
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ $top.Release.Name }}-{{ $instance }}
        app.kubernetes.io/name: {{ $top.Release.Name }}-{{ $instance }}
      annotations:
        prometheus.io/port: "9102"
        prometheus.io/scrape: "true"
        prometheus.io/targets: openstack
    spec:

      containers:
      - name: {{ $top.Release.Name }}-{{ $instance }}
        image: {{ required "$top.Values.global.registry is missing" $top.Values.global.registry }}/{{ $top.Values.image.name }}:{{required "missing $top.Values.image.image_tag" $top.Values.image.image_tag }}
       {{- if or (eq $top.Values.global.region "qa-de-1") (eq $top.Values.global.region "qa-de-2") }}
        imagePullPolicy: Always
       {{- else }}
        imagePullPolicy: IfNotPresent
       {{- end }}
        command: ["/opt/venv/bin/designate-nanny", "autorun"]
        env:
        - name: NANNY_CONFIG
          value: "/srv/nanny.yaml"
        - name: OS_AUTH_URL
          value: "{{ $top.Values.global.keystone_api_endpoint_protocol_public | default "https"}}://{{ $endpoint }}/v3"
        - name: PYCCLOUD_USE_DUMMY_SECRETS
          value: "yes"          
        - name: OS_REGION_NAME
          value: "{{ required "missing $top.Values.global.region" $top.Values.global.region}}"
        - name: OS_PROJECT_NAME
          value:  "{{ required "missing $top.Values.designate_nanny.credentials.designate_api.project_name" $top.Values.designate_nanny.credentials.designate_api.project_name}}"
        - name: OS_PROJECT_DOMAIN_NAME
          value:  "{{ required "missing $top.Values.designate_nanny.credentials.designate_api.project_domain_name" $top.Values.designate_nanny.credentials.designate_api.project_domain_name}}"
        - name: OS_USERNAME
          value: "{{ required "missing $top.Values.designate_nanny.credentials.designate_api.user" $top.Values.designate_nanny.credentials.designate_api.user}}"
        - name: OS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ $top.Release.Name }}-{{ $instance }}-os-secret
              key:  designate_nanny_os_password
        - name: OS_USER_DOMAIN_NAME
          value:  "{{ required "missing $top.Values.designate_nanny.credentials.designate_api.project_user_domain_name" $top.Values.designate_nanny.credentials.designate_api.project_user_domain_name}}"
        - name: INSTANCE_NAME
          value: "{{ $instance }}"
        ports:
        - containerPort: 9102
          name: metrics
          protocol: TCP
        resources:
{{ toYaml $top.Values.resources | indent 10 }}
        volumeMounts:
        - name: nanny-conf
          mountPath: /srv/nanny.yaml
          subPath: nanny.yaml
        - name: persistent-storage
          mountPath: {{ $top.Values.storage_mountpoint | default "/var/lib/bind" }}
      volumes:
      - name: nanny-conf
        configMap:
          name: {{ $top.Release.Name }}-{{ $instance }}
      - name: persistent-storage
        persistentVolumeClaim:
          claimName: {{ $instance }}-{{ required "missing $top.Values.global.region" $top.Values.global.region}}
{{- end }}
{{- end }}
