owner-info:
  service: prometheus
  support-group: observability
  maintainers:
    - Martin Vossen
    - Tommy Sauer
    - Richard Tief
  helm-chart-url: https://github.com/sapcc/helm-charts/tree/master/global/promlens

# -- Provide a name in place of `promlens`
nameOverride: ""
# -- String to fully override `"promlens.fullname"`
fullnameOverride: ""

image:
  # -- image repository
  repository: keppel.eu-de-1.cloud.sap/ccloud-dockerhub-mirror/prom/promlens
  # -- image pull policy
  pullPolicy: Always
  # -- Overrides the image tag
  #tag: "v0.3.0"

# -- If defined, uses a Secret to pull an image from a private Docker registry or repository.
imagePullSecrets: []

# -- Number of replicas
replicaCount: 1

# -- The number of old ReplicaSets to retain
revisionHistoryLimit: 5

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Annotations to be added to exporter pods
podAnnotations: {} # +doc-gen:ignore

# -- Pod-level security context
podSecurityContext: {}
  # fsGroup: 2000

# -- container-level security context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- Kubernetes service type
  type: ClusterIP
  # -- Kubernetes port where service is exposed
  port: 8080

ingress:
  # -- Enable ingress
  enabled: true
  # -- Ingress class name
  className: "nginx"
  # -- Annotations to add to the ingress
  annotations: {}
  hosts:
    - host: promlens.qa-de-1.cloud.sap
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    # FIXME only one region currently, take generic approach
    - secretName: tls-promlens-qa-de-1-cloud-sap
      hosts:
        - promlens.qa-de-1.cloud.sap

  # SAP auth stuff
  # Client certificate authentication on ingress level.
  authentication:
    oauth:
      enabled: false

      # The URL to the authentication service.
      authURL:

      # Optional URL to specify the location of the error page.
      authSignInURL:

    sso:
      enabled: true
      # The key (<namespace>/<name>) of the secret containing the CA certificate (`ca.crt`) that is enabled to authenticate against this Ingress.
      authTLSSecret: kube-system/ingress-cacrt

      # The validation depth between the provided client certificate and the certification authority chain.
      authTLSVerifyDepth: 3

      # Enables verification of client certificates.
      authTLSVerifyClient: on

# -- Resource limits and requests for the pods.
resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
   #limits:
     #cpu: 100m
     #memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- Node labels for pod assignment
nodeSelector: {}

# -- Toleration labels for pod assignment
tolerations: []

# -- Affinity settings for pod assignment
affinity: {}

config:
  grafana:
    # -- Enable integration with Grafana
    enabled: false
    # -- The auth token to pass to the Grafana API, see https://grafana.com/docs/grafana/latest/http_api/auth/
    apiToken: ""
    # -- The default Grafana datasource ID to use (overrides Grafana's own default).
    defaultDatasourceId: ""
    # -- An existing secret containing the auth token, key needs to be api-token
    existingSecret: ""
    # -- The URL of your Grafana installation
    url: ""
  log:
    # -- Output format of log messages. One of: [logfmt, json]
    format: json
    # -- Only log messages with the given severity or above. One of: [debug, info, warn, error]
    level: info
  sharedLinks:
    gcs:
      # -- Enable Link Sharing via Google Storage Bucket
      enabled: false
      # -- Name of the GCS bucket for storing shared links
      bucket: ""
      # -- An existing secret containing the credentials for the storage-account as json, key needs to be gcs-cred.json
      existingSecret: ""
      # -- Google Cloud Storage Account key
      storageAccount: ""
    sql:
      # -- Enable Link Sharing via SQL database
      enabled: false
      # -- Whether to automatically create the required tables when using a SQL database for shared links.
      createTables: true
      # -- The SQL driver to use for storing shared links in a SQL database. Supported values: [mysql, sqlite].
      driver: "sqlite"
      # -- SQL Data Source Name when using a SQL database to shared links (see https://github.com/go-sql-driver/mysql#dsn-data-source-name) for MySQL, https://github.com/glebarez/go-sqlite#example for SQLite)
      dsn: "/tmp/promlens-links.db"
      # -- An existing secret containing the dsn for the link storage backend, key needs to be dsn
      existingSecret: ""
      # -- The maximum retention time for shared links when using a SQL database (e.g. '10m', '12h'). Set to 0 for infinite retention.
      retention: "0"
  web:
    # -- The default Prometheus URL to load PromLens with.
    defaultPrometheusUrl: "https://metrics.global.cloud.sap"
    # -- The URL under which PromLens is externally reachable (for example, if PromLens is served via a reverse proxy). Used for generating relative and absolute links back to PromLens itself. If the URL has a path portion, it will be used to prefix all HTTP endpoints served by PromLens. If omitted, relevant URL components will be derived automatically.
    externalUrl: ""
    # -- Prefix for the internal routes of web endpoints. Defaults to path of --web.external-url.
    routePrefix: ""
