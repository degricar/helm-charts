suite: test statefulset-mariadb-3nodes
values:
  - ../values.yaml
  - ../../../../../secrets/qa-de-3/values/globals.yaml
  - ../../../../../secrets/ci/mariadb-galera/3nodes.yaml
set:
  mariadb.galera.clustername: "test"
release:
  name: mariadb-galera
templates:
  - statefulset-mariadb.yaml
  - configmap-mariadb-my.cnf.yaml
  - configmap-mariadb.yaml
tests:
  - it: namming convention
    template: statefulset-mariadb.yaml
    set:
      mariadb.galera.clustername: "BKH"
    asserts:
      - isKind:
          of: StatefulSet
      - equal:
          path: metadata.name
          value: BKH-mariadb-g
        template: statefulset-mariadb.yaml
      - equal:
          path: spec.template.spec.serviceAccount
          value: BKH-mariadb-galera
      - equal:
          path: >-
            spec.template.spec.containers[0].env[10].valueFrom.secretKeyRef.name
          value: BKH-mariadb-galera-mariadb-monitor

  - it: startup prope with default values
    template: statefulset-mariadb.yaml
    asserts:
      - notExists:
          path: spec.template.spec.containers[0].startupProbe.exec.command[2]
      - notExists:
          path: >-
            spec.template.spec.containers[0].startupProbe.initialDelaySeconds
      - notExists:
          path: >-
            spec.template.spec.containers[0].startupProbe.periodSeconds
      - notExists:
          path: >-
            spec.template.spec.containers[0].startupProbe.failureThreshold
      - notExists:
          path: >-
            spec.template.spec.containers[0].startupProbe.timeoutSeconds

  - it: startup prope with activated Probes
    template: statefulset-mariadb.yaml
    set:
      startupProbe: true
      startupProbe.timeoutSeconds.application: 20
      command.application: null
    asserts:
      - equal:
          path: spec.template.spec.containers[0].startupProbe.exec.command[2]
          value: '/opt/mariadb/bin/startup.sh'
      - equal:
          path: >-
            spec.template.spec.containers[0].startupProbe.initialDelaySeconds
          value: 15
      - equal:
          path: >-
            spec.template.spec.containers[0].startupProbe.periodSeconds
          value: 10
      - equal:
          path: >-
            spec.template.spec.containers[0].startupProbe.failureThreshold
          value: 12
      - equal:
          path: >-
            spec.template.spec.containers[0].startupProbe.timeoutSeconds
          value: 20

  - it: liveness probes with default values
    template: statefulset-mariadb.yaml
    asserts:
      - notExists:
          path: spec.template.spec.containers[0].livenessProbe.exec.command[2]
      - notExists:
          path: >-
            spec.template.spec.containers[0].livenessProbe.initialDelaySeconds
      - notExists:
          path: >-
            spec.template.spec.containers[0].livenessProbe.periodSeconds
      - notExists:
          path: >-
            spec.template.spec.containers[0].livenessProbe.failureThreshold
      - notExists:
          path: >-
            spec.template.spec.containers[0].livenessProbe.timeoutSeconds

  - it: liveness probes with activated Probes
    template: statefulset-mariadb.yaml
    set:
      livenessProbe: true
      livenessProbe.timeoutSeconds.application: 20
      command.application: null
    asserts:
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.exec.command[2]
          value: '/opt/mariadb/bin/liveness.sh'
      - equal:
          path: >-
            spec.template.spec.containers[0].livenessProbe.initialDelaySeconds
          value: 15
      - equal:
          path: >-
            spec.template.spec.containers[0].livenessProbe.periodSeconds
          value: 30
      - equal:
          path: >-
            spec.template.spec.containers[0].livenessProbe.failureThreshold
          value: 4
      - equal:
          path: >-
            spec.template.spec.containers[0].livenessProbe.timeoutSeconds
          value: 20

  - it: readiness probes with default values
    template: statefulset-mariadb.yaml
    asserts:
      - notExists:
          path: spec.template.spec.containers[0].readinessProbe.exec.command[2]
      - notExists:
          path: >-
            spec.template.spec.containers[0].readinessProbe.initialDelaySeconds
      - notExists:
          path: >-
            spec.template.spec.containers[0].readinessProbe.periodSeconds
      - notExists:
          path: >-
            spec.template.spec.containers[0].readinessProbe.successThreshold
      - notExists:
          path: >-
            spec.template.spec.containers[0].readinessProbe.failureThreshold
      - notExists:
          path: >-
            spec.template.spec.containers[0].readinessProbe.timeoutSeconds

  - it: readiness probes with activated probes
    set:
      readinessProbe: true
      readinessProbe.timeoutSeconds.application: 20
      command.application: null
    template: statefulset-mariadb.yaml
    asserts:
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.exec.command[2]
          value: '/opt/mariadb/bin/readiness.sh'
      - equal:
          path: >-
            spec.template.spec.containers[0].readinessProbe.initialDelaySeconds
          value: 30
      - equal:
          path: >-
            spec.template.spec.containers[0].readinessProbe.periodSeconds
          value: 20
      - equal:
          path: >-
            spec.template.spec.containers[0].readinessProbe.successThreshold
          value: 1
      - equal:
          path: >-
            spec.template.spec.containers[0].readinessProbe.failureThreshold
          value: 3
      - equal:
          path: >-
            spec.template.spec.containers[0].readinessProbe.timeoutSeconds
          value: 20

  - it: affinity config for galera cluster
    template: statefulset-mariadb.yaml
    asserts:
      - equal:
          path: "spec.template.spec.affinity.podAntiAffinity.\
                preferredDuringSchedulingIgnoredDuringExecution[0].\
                weight"
          value: 1
      - equal:
          path: "spec.template.spec.affinity.podAntiAffinity.\
                preferredDuringSchedulingIgnoredDuringExecution[0].\
                podAffinityTerm.labelSelector.matchExpressions[0].key"
          value: app
      - equal:
          path: "spec.template.spec.affinity.podAntiAffinity.\
                preferredDuringSchedulingIgnoredDuringExecution[0].\
                podAffinityTerm.labelSelector.matchExpressions[0].operator"
          value: In
      - equal:
          path: "spec.template.spec.affinity.podAntiAffinity.\
                preferredDuringSchedulingIgnoredDuringExecution[0].\
                podAffinityTerm.labelSelector.matchExpressions[0].values[0]"
          value: mariadb-galera
      - equal:
          path: "spec.template.spec.affinity.podAntiAffinity.\
                preferredDuringSchedulingIgnoredDuringExecution[0].\
                podAffinityTerm.labelSelector.matchExpressions[1].key"
          value: component
      - equal:
          path: "spec.template.spec.affinity.podAntiAffinity.\
                preferredDuringSchedulingIgnoredDuringExecution[0].\
                podAffinityTerm.labelSelector.matchExpressions[1].operator"
          value: In
      - equal:
          path: "spec.template.spec.affinity.podAntiAffinity.\
                preferredDuringSchedulingIgnoredDuringExecution[0].\
                podAffinityTerm.labelSelector.matchExpressions[1].values[0]"
          value: application
      - equal:
          path: "spec.template.spec.affinity.podAntiAffinity.\
                preferredDuringSchedulingIgnoredDuringExecution[0].\
                podAffinityTerm.topologyKey"
          value: "topology.kubernetes.io/zone"
      - equal:
          path: "spec.template.spec.affinity.podAntiAffinity.\
                preferredDuringSchedulingIgnoredDuringExecution[1].\
                weight"
          value: 2
      - equal:
          path: "spec.template.spec.affinity.podAntiAffinity.\
                preferredDuringSchedulingIgnoredDuringExecution[1].\
                podAffinityTerm.labelSelector.matchExpressions[0].key"
          value: app
      - equal:
          path: "spec.template.spec.affinity.podAntiAffinity.\
                preferredDuringSchedulingIgnoredDuringExecution[1].\
                podAffinityTerm.labelSelector.matchExpressions[0].operator"
          value: In
      - equal:
          path: "spec.template.spec.affinity.podAntiAffinity.\
                preferredDuringSchedulingIgnoredDuringExecution[1].\
                podAffinityTerm.labelSelector.matchExpressions[0].values[0]"
          value: mariadb-galera
      - equal:
          path: "spec.template.spec.affinity.podAntiAffinity.\
                preferredDuringSchedulingIgnoredDuringExecution[1].\
                podAffinityTerm.labelSelector.matchExpressions[1].key"
          value: component
      - equal:
          path: "spec.template.spec.affinity.podAntiAffinity.\
                preferredDuringSchedulingIgnoredDuringExecution[1].\
                podAffinityTerm.labelSelector.matchExpressions[1].operator"
          value: In
      - equal:
          path: "spec.template.spec.affinity.podAntiAffinity.\
                preferredDuringSchedulingIgnoredDuringExecution[1].\
                podAffinityTerm.labelSelector.matchExpressions[1].values[0]"
          value: application
      - equal:
          path: "spec.template.spec.affinity.podAntiAffinity.\
                preferredDuringSchedulingIgnoredDuringExecution[1].\
                podAffinityTerm.topologyKey"
          value: "kubernetes.io/hostname"

  - it: security context test
    template: statefulset-mariadb.yaml
    asserts:
      - equal:
          path: "spec.template.spec.securityContext.runAsUser"
          value: 101
      - equal:
          path: "spec.template.spec.securityContext.runAsGroup"
          value: 101
      - equal:
          path: "spec.template.spec.securityContext.fsGroup"
          value: 101

  - it: pull secret not existing per default
    template: statefulset-mariadb.yaml
    asserts:
      - notExists:
          path: "spec.template.spec.imagePullSecrets[0].name"

  - it: initial container maraidb-galera
    template: statefulset-mariadb.yaml
    asserts:
      - equal:
          path: "spec.template.spec.initContainers[0].name"
          value: "sysctl-tcp-keepalive"
      - equal:
          path: "spec.template.spec.initContainers[0].image"
          value: "keppel.eu-de-1.cloud.sap/ccloud/\
                  mariadb-galera-ubuntu:22.04-20230629170110"
      - equal:
          path: "spec.template.spec.initContainers[0].imagePullPolicy"
          value: "IfNotPresent"
      - equal:
          path: "spec.template.spec.initContainers[0].command[2]"
          value: "sysctl -w net.ipv4.tcp_keepalive_time=60 \
                  net.ipv4.tcp_keepalive_intvl=60 \
                  net.ipv4.tcp_keepalive_probes=5"
      - equal:
          path: "spec.template.spec.initContainers[0].securityContext.\
                privileged"
          value: true
      - equal:
          path: "spec.template.spec.initContainers[0].securityContext.\
                runAsUser"
          value: 0
      - equal:
          path: "spec.template.spec.initContainers[1].name"
          value: "increase-map-count"
      - equal:
          path: "spec.template.spec.initContainers[1].image"
          value: "keppel.eu-de-1.cloud.sap/ccloud/\
                  mariadb-galera-ubuntu:22.04-20230629170110"
      - equal:
          path: "spec.template.spec.initContainers[1].imagePullPolicy"
          value: "IfNotPresent"
      - equal:
          path: "spec.template.spec.initContainers[1].command[2]"
          value: "echo 262144 > /proc/sys/vm/max_map_count"
      - equal:
          path: "spec.template.spec.initContainers[1].securityContext.\
                privileged"
          value: true
      - equal:
          path: "spec.template.spec.initContainers[0].securityContext.\
                runAsUser"
          value: 0
      - notExists:
          path: "spec.template.spec.initContainers[2]"
